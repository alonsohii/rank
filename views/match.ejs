<html>
<head>
  <title> <%= title %></title>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.9.2/themes/base/jquery-ui.css" />    
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.9.2/jquery-ui.min.js"></script>




   <link rel="stylesheet"
     href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.9.2/themes/base/jquery-ui.css" />
 <!--  <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>     -->

 


  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/js/bootstrap.min.js"></script>
  <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/lodash.js/0.10.0/lodash.min.js"></script>
  <script type="text/javascript" src="http://alasql.org/codex/lib/alasql/alasql.min.js"></script>
  <script type="text/javascript" src=" https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.15.0/jquery.validate.min.js"></script>

  <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>



      <!--pqSelect-->
    <link rel="Stylesheet" href="../grid/pqselect.min.css" />   
    <script src="../grid/pqselect.min.js"></script>
     
    <!--link rel="stylesheet" href="/Content/css/pqgrid.min.css" /-->    
    <link rel="stylesheet" href="../grid/pqgrid.min.css" />    

    <script src="../grid/touch-punch.js"></script>

    <!--script src="/Content/js/pqgrid.min.js"></script-->    
    <script src="../grid/pqgrid.min.js"></script>    


<style>
.red{
  background-color:red;
}
div.grid_array *
{
    margin:auto 3px;
}
tr.red td
{
    background-color:red;
    color:Green;    
}
tr.green td
{
    background:green;
    color:yellow;    
}
tr td.green
{
    background:lightgreen;
    color:Red;
}
tr td.red
{
    background:brown;
    color:yellow;
}

input.filterValue{    
    border:1px solid #aaa;padding:1px 5px;
    margin:0px 5px;
}
  .custoComb {
   background-color: #cccccc;
      background: #cccccc;
      color: #fff;
      text-shadow: 0 1px 0 rgba(0, 0, 0, 0.4);
  }
  .custom-combobox {
    position: relative;
    display: inline-block;
  }
  .custom-combobox-toggle {
    position: absolute;
    top: 0;
    bottom: 0;
    margin-left: -1px;
    padding: 0;
  }
  .custom-combobox-input {
    margin: 0;
    padding: 5px 10px;
  }
  </style>
   <script type="text/javascript" src=" ../js/adicional.js"></script>
 <script>


function Reto(arg){

    if (confirm("Estas seguro?\nDeseas cancelar este reto")) { 

       $.get("http://localhost:8080/api/CancelarReto?idreto="+arg+"&token="+localStorage.getItem('tk'), function(data, status){

               $("#grid_array").pqGrid("refreshDataAndView");

         }); 
    }
   
}

 function Grid(){

    $.when( $.get("http://localhost:8080/api/partidos?token="+localStorage.getItem('tk'), function(data, status){
          
                  jQuery.data( document, "partidos",data );

       })).then(function( x ) {

          var data = jQuery.data( document, "partidos" );
      
             var obj = {

            //columnBorders: false,
    
           //  showBottom: false
            //, maxColWidth: '50%'
             scrollModel: { autoFit: true },
            width: '100%',
            height: 400,
            collapsible: false,
            pageModel: { type: "local", rPP: 20, strRpp: "{0}", strDisplay: "{0} to {1} of {2}" },
            selectionModel: { swipe: true },

            wrap: false, hwrap: false,
            //freezeCols: 2,            
            numberCell: { show: false, resizable: true, title: "#" },
            title: "Partidos",
            resizable: true,
            editable: false




            //, flexHeight: true
        };

        obj.columnTemplate = { minWidth: '10%', maxWidth: '80%' };
       var colM = [
            { title: "Creacion", dataType: "date", dataIndx: "registro", minWidth: 150, resizable: false },
            { title: "Local", dataType: "string", dataIndx: "ulocal", width: '150' },
            { title: "Visitante", dataType: "string", dataIndx: "uvisitante", width: '150' },
            { title: "Estatus", dataType: "string", dataIndx: "estatus", width: '100', pq_rowcls:'red',  pq_cellcls: { "estatus": "green"} },
            { title: "Retador", dataType: "string", dataIndx: "Retador", width: '150' },
            { title: "Accion", dataType: "string", dataIndx: "Retador", width: '100' }
          
        ];


        $.extend(colM[5], {            
            render: function (ui) {
                var rowData = ui.rowData,
                    dataIndx = ui.dataIndx;

              //  rowData.pq_cellcls = rowData.pq_cellcls || {};
            var valor =  rowData['idbitgames'];
                    
                    //rowData.pq_cellcls[dataIndx] = 'pink';
                   return "<button  class='btn btn-danger'  onclick='Reto("+valor+")'> - Cancelar Reto - </button>     " ;
          
            }, width: 100
        });



        $.extend(colM[3], {            
            render: function (ui) {
                var rowData = ui.rowData,
                    dataIndx = ui.dataIndx;
debugger;
              //  rowData.pq_cellcls = rowData.pq_cellcls || {};
              var cls;
           switch (ui.rowData.estatus) {
                case 'En espera':
                    cls = "alert bg-primary";
                    break;
                case 'Activo(Aceptado)':
                    cls = "alert-succes";
                    break;
                case 'Finalizado':
                    cls = "alert-info";
                    break;
                case 'Rechazado':
                    cls = "alert-warning";
                    break;
                case 'Cancelado':
                    cls = "alert-danger";
                    break;
                default:
                    cls = "";
            }
                  var  valor = '<div class="alert '+cls+'">'+ui.rowData.estatus+'</div>'
                    //rowData.pq_cellcls[dataIndx] = 'valopink';
                   return valor ;
          
            }, width: 100
        });


       


        var dataModel = {
            location: "remote",
            sorting: "remote",
            dataType: "JSON",
            method: "GET",
            sortIndx: ["registro"],
            sortDir: ["up", "down"],
            url: "http://localhost:8080/api/partidos?token="+localStorage.getItem('tk'),

            //url: "orders.php", //for PHP
            getData: function (dataJSON) {
                return { curPage: data.curPage, totalRecords:data.totalRecords, data: dataJSON.data };
            }
        }

        var gObj = {

            dataModel: dataModel,
   
            colModel: colM,               
           
            virtualX:true, virtualY:true,
            freezeCols: 5,
              width: 900,
            height: 400,
            collapsible: true,
            pageModel: { type: "local", rPP: 20, strRpp: "{0}", strDisplay: "{0} to {1} of {2}" },
            selectionModel: { swipe: true },
            wrap: false, hwrap: false,

            //freezeCols: 2,            
           // numberCell: { show: false, resizable: true, title: "#" },
            title: "Partidos",
            resizable: true,
            editable: false,
             scrollModel: { autoFit: true },
        };
         




        var $grid = $("div#grid_array").pqGrid(gObj);

        //bind the select list.
        $("#grid_array").change(function (evt) {
          
            var DM = $grid.pqGrid("option", "dataModel");

            $grid.pqGrid("option", "dataModel", DM);
            $grid.pqGrid("refreshDataAndView");
        });
         
     //   $("#grid_array").pqGrid( obj );  
                                                 //    $("#grid_array").pqGrid("refreshDataAndView");
//$("#grid_array").pqGrid("refresh");     
});

 }



  $( function() {
    $.widget( "custom.combobox", {
      _create: function() {
        this.wrapper = $( "<span>" )
          .addClass( "custom-combobox" )
          .insertAfter( this.element );
 
        this.element.hide();
        this._createAutocomplete();
        this._createShowAllButton();
      },
 
      _createAutocomplete: function() {
        var selected = this.element.children( ":selected" ),
          value = selected.val() ? selected.text() : "";
 
        this.input = $( "<input>" )
          .appendTo( this.wrapper )
          .val( value )
          .attr( "title", "" )
          .addClass( "custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left" )
          .autocomplete({
            delay: 0,
            minLength: 0,
            source: $.proxy( this, "_source" )
          })
          .tooltip({
            classes: {
              "ui-tooltip": "ui-state-highlight"
            }
          });
 
        this._on( this.input, {
          autocompleteselect: function( event, ui ) {
            ui.item.option.selected = true;
            this._trigger( "select", event, {
              item: ui.item.option
            });
          },
 
          autocompletechange: "_removeIfInvalid"
        });
      },
 
      _createShowAllButton: function() {
        var input = this.input,
          wasOpen = false;
 
        $( "<a>" )
          .attr( "tabIndex", -1 )
          .attr( "title", "Show All Items" )
          .tooltip()
          .appendTo( this.wrapper )
          .button({
            icons: {
              primary: "ui-icon-triangle-1-s"
            },
            text: false
          })
          .removeClass( "ui-corner-all" )
          .addClass( "custom-combobox-toggle ui-corner-right" )
          .on( "mousedown", function() {
            wasOpen = input.autocomplete( "widget" ).is( ":visible" );
          })
          .on( "click", function() {
            input.trigger( "focus" );
 
            // Close if already visible
            if ( wasOpen ) {
              return;
            }
 
            // Pass empty string as value to search for, displaying all results
            input.autocomplete( "search", "" );
          });
      },
 
      _source: function( request, response ) {
        var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), "i" );
        response( this.element.children( "option" ).map(function() {
          var text = $( this ).text();
          if ( this.value && ( !request.term || matcher.test(text) ) )
            return {
              label: text,
              value: text,
              option: this
            };
        }) );
      },
 
      _removeIfInvalid: function( event, ui ) {
 
        // Selected an item, nothing to do
        if ( ui.item ) {
          return;
        }
 
        // Search for a match (case-insensitive)
        var value = this.input.val(),
          valueLowerCase = value.toLowerCase(),
          valid = false;
        this.element.children( "option" ).each(function() {
          if ( $( this ).text().toLowerCase() === valueLowerCase ) {
            this.selected = valid = true;
            return false;
          }
        });
 
        // Found a match, nothing to do
        if ( valid ) {
          return;
        }
 
        // Remove invalid value
        this.input
          .val( "" )
          .attr( "title", value + " didn't match any item" )
          .tooltip( "open" );
        this.element.val( "" );
        this._delay(function() {
          this.input.tooltip( "close" ).attr( "title", "" );
        }, 2500 );
        this.input.autocomplete( "instance" ).term = "";
      },
 
      _destroy: function() {
        this.wrapper.remove();
        this.element.show();
      }
    });
 
    $( "#combobox" ).combobox();
    $( "#toggle" ).on( "click", function() {
      $( "#combobox" ).toggle();
    });
  } );
  </script>

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap-theme.min.css"> 


  <link rel="stylesheet" href="../css/adicional.css">

  <script>


  
$(document).ready(function() {
         $("#Notificacion").hide();
          $("#Correcto").hide();
         $("#registro").click(function(){
  debugger;      
          var contrincante = $("#combobox").val();

var esvalido  = false;
var campos = ["Contrincante"];
var valores = [contrincante];
  esvalido = validarCamposStr(valores,campos);



if(esvalido){

var camposjson = CamposJson('#combobox');
camposjson.retador = jQuery.data( document, "usuario")[0].id.toString();
camposjson.retadorStr =  jQuery.data( document, "usuario")[0].usuario
camposjson.visitante = $( "#combobox option:selected" ).text();

    if(camposjson.retadorStr != camposjson.visitante){

                             $("#Notificacion").hide(350);
                                 $.post( "http://localhost:8080/api/reto?token="+localStorage.getItem('tk'), camposjson )
                                  .done(function( data ) {
                                    debugger;
                                    // $("#grid_array").html(null);  

                                   if(data.sobrepasa){
                                     Error('El limite es de 5 retos al dia con el mismo jugador , este se ha terminado.');
                                   }else{ 
                                       if(!data.success){
                                             Error('Surgio un error interno del servidor.');
                                        }else{

                                            if(!data.success){
                                                 Error('Este correo ya se encuentra registrado.');
                                            }else{
                                                  $("#grid_array").pqGrid("refreshDataAndView");
                                                  $("#Correcto").hide(50);
                                                  $("#Correcto").html('Bien! Reto hecho  a '+camposjson.visitante+' correctamente te quedan '+data.conteo[0].COUNTEOS+' retos por hacer al mismo jugador');
                                                  $("#Correcto").show(350);

                                                  
                                            }
                                        }

                                   }

                                   
                                  })
                                   .fail(function(xhr, status, error) {
                                         Error('Surgio un error interno del servidor.');
                                            $("#Correcto").hide(50);
                                          //  $("#Correcto").hide(350);
                                    }) ;

    }else {       Error('No puedes retarte ati mismo.');       }


}else{// else es valido

}

      });

});
</script>

</head>
<body>
<%- include('header'); %>



<div class="container containerBorder">
  <div class="row">
<div class="col-xs-12" id="demoContainer">
  <div class="alert alert-success" id="Correcto">
    <strong>Bien!</strong> Registro Hecho exitosamente.
  </div>
<div class="alert alert-danger" id="Notificacion" >
  <strong>Error!</strong><p id="textnot" ></p>
</div>
    <div id="registrationForm2" class="form-horizontal fv-form fv-form-bootstrap" novalidate="novalidate"  target="none" action="">
                 <!--  <button type="submit" class="fv-hidden-submit" style="display: none; width: 0px; height: 0px;"></button> -->
    <div class="form-group">
        <label class="col-xs-3 control-label">Partida</label>
        <div class="col-xs-4">
            <input type="text" class="form-control custoComb" name="local" id="local" placeholder="Contrincante" value='' disabled="" />
        </div>
        <div class="col-xs-4">
            <select class="form-control" name="visitante" id="combobox">
               
            </select>
        </div>

    </div>


    <script>

    $(function() {
      $.when($.get("http://localhost:8080/api/getuser?token="+localStorage.getItem('tk'), function(data, status){
          
            jQuery.data( document, "usuario",data );

       })).then(function( data, textStatus, jqXHR ) {
           $('#local').val(jQuery.data( document, "usuario")[0].usuario);
           Grid();
            //$("#combobox").val('');
        });  

        $.when( $.get("http://localhost:8080/api/usuarios?token="+localStorage.getItem('tk'), function(data, status){
          
            jQuery.data( document, "paises",data );

          })).then(function( data, textStatus, jqXHR ) {
            ComboUsuarios();
        });      
    });

    function Where(data,value){
     return  _.filter(data, function(item, index) {
         return _.contains([value], item.iso);
    });

    }
var adress;
var idpais;

    function ComboUsuarios(){



        $.when($.getJSON('http://api.wipmania.com/jsonp?callback=?', function (data) {
                adress =  data.address.country;
            })).then(function( data, textStatus, jqXHR ) {
           $.each(   jQuery.data( document, "paises"), function( i, l ){

            $( "#combobox" ).append( " <option value='"+l.id+"'>" + l.nombre +"</option>" );
           if(adress == l.Pais ){
               idpais = l.Id;
            }
          });

        $("#combobox").val(idpais);

        });

    }

    function GroupBy(data){

      return  _
        .chain(data)
        .groupBy('Nombre')
        .sort('Nombre')
        .map(function(value, key) {
            return {
                Pais: key,
                Id: value[0].id,
                Iso: value[0].iso
               // paises: _.pluck(value, 'Nombre')
            }
        })
        .value();
    }
    </script>


    </div>





    <div class="form-group">
        <div class="col-xs-9 col-xs-offset-3">
            <button class="btn btn-primary" name="signup" value="Sign up" id='registro' >Retar ahora!</button>
        </div>
    </div>






</div>
    </div>
  </div>


<div id="grid_array" class="container containerBorder"></div>

    <div id="grid_search" style="margin: auto;">
</div>




  </div>
</body>
</html>
